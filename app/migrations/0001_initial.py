# Generated by Django 4.2.23 on 2025-10-22 22:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Fakultas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kodept', models.CharField(max_length=10)),
                ('kodefakultas', models.CharField(max_length=10, unique=True)),
                ('namafakultas', models.CharField(max_length=150)),
                ('namafakultas_en', models.CharField(blank=True, max_length=150, null=True)),
                ('dekan', models.CharField(max_length=150)),
                ('dekan_en', models.CharField(blank=True, max_length=150, null=True)),
                ('namadekan', models.CharField(max_length=150)),
                ('nipt', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fakultas',
            },
        ),
        migrations.CreateModel(
            name='Mahasiswa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nim', models.CharField(max_length=20, unique=True)),
                ('nama', models.CharField(max_length=150)),
                ('nik', models.CharField(max_length=20)),
                ('tempatlahir', models.CharField(max_length=100)),
                ('tgllahir', models.DateField()),
                ('jeniskelamin', models.CharField(choices=[('L', 'Laki-laki'), ('P', 'Perempuan')], max_length=1)),
                ('tglyudisium', models.DateField(blank=True, null=True)),
                ('tglyudisium_en', models.DateField(blank=True, null=True)),
                ('tglwisuda', models.DateField(blank=True, null=True)),
                ('tglwisuda_en', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Mahasiswa',
            },
        ),
        migrations.CreateModel(
            name='MataKuliah',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kodemk', models.CharField(max_length=10, unique=True)),
                ('namamk', models.CharField(max_length=150)),
                ('sks', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Mata Kuliah',
            },
        ),
        migrations.CreateModel(
            name='Prodi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kode_prodi', models.CharField(max_length=10, unique=True)),
                ('namaprodi', models.CharField(max_length=150)),
                ('namaprodi_en', models.CharField(blank=True, max_length=150, null=True)),
                ('akreditasi', models.CharField(max_length=5)),
                ('noakreditasi', models.CharField(blank=True, max_length=100, null=True)),
                ('gelar', models.CharField(blank=True, max_length=100, null=True)),
                ('pisn', models.CharField(blank=True, max_length=50, null=True)),
                ('fakultas', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prodi', to='app.fakultas')),
            ],
            options={
                'verbose_name_plural': 'Program Studi',
            },
        ),
        migrations.CreateModel(
            name='Nilai',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nilai_huruf', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E')], max_length=1)),
                ('mahasiswa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nilai_list', to='app.mahasiswa')),
                ('matakuliah', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nilai_list', to='app.matakuliah')),
            ],
        ),
        migrations.AddField(
            model_name='matakuliah',
            name='prodi',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matakuliah', to='app.prodi'),
        ),
        migrations.AddField(
            model_name='mahasiswa',
            name='prodi',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mahasiswa', to='app.prodi'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
